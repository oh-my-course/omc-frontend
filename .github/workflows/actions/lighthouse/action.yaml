name: Run lighthouse CI When Push

runs:
  uses: 'composite'
  steps:
    - name: Run Lighthouse CI
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      run: |
        npm install -g @lhci/cli
        npm run lgh || echo "Fail to Run Lighthouse CI!"

    - name: Format lighthouse score
      id: format_lighthouse_score
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const path = require('path');
          const results = JSON.parse(fs.readFileSync(path.join(process.env.GITHUB_WORKSPACE, 'lhci_reports', 'manifest.json')));
          let comments = "";

          results.forEach((result) => {
            const { summary, jsonPath } = result;
            const detailsPath = path.join(process.env.GITHUB_WORKSPACE, 'lhci_reports', jsonPath);
            const details = JSON.parse(fs.readFileSync(detailsPath));
            const { audits } = details;

            const formatResult = (res) => Math.round(res * 100);
            Object.keys(summary).forEach(
              (key) => (summary[key] = formatResult(summary[key]))
            );

            const score = (res) => (res >= 90 ? "üü¢" : res >= 50 ? "üü†" : "üî¥");

            const comment = [
              `‚ö°Ô∏è Lighthouse report!`,
              `| Category | Score |`,
              `| --- | --- |`,
              `| ${score(summary.performance)} Performance | ${summary.performance} |`
            ].join("\n");

            const detail = [
              `| Category | Score |`,
              `| --- | --- |`,
              `| ${score(
                audits["first-contentful-paint"].score * 100
              )} First Contentful Paint | ${
                audits["first-contentful-paint"].displayValue
              } |`
            ].join("\n");

            comments += comment + "\n" + detail + "\n";
          });

          core.setOutput('comments', comments);

    - name: Comment PR
      uses: unsplash/comment-on-pr@v1.3.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        msg: ${{ steps.format_lighthouse_score.outputs.comments }}
